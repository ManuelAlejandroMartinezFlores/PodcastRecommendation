{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"PodcastRecommendation 0.1.4 Podcast Recommendation Algorithm Instalar python3 -m pip install podcast-recommendation pip install podcast-recommendation pip install podcast-recommendation==0.1.4 Uso Import from podcast_recommendation.algorithm import PodcastRecommendation Crear objeto Para utilizarlo debe tener una DataBase abierta en Neo4j con el plugin de Data Science pr = PodcastRecommendation('bolt://localhost:7687', ('neo4j', 'password'), verbose=True) Reading x_train Reading y_train Training model Training complete Generar grafo pr.build_graph(verbose=True) Reading categories Reading ratings Creating categories, categories and IsA Creating users, categories and ratings Build complete Se genera un grafo como el siguiente: Generar recomendaciones Para recomendar podcast al usuario 6C561484AED5C02 pr.recommend(user_id='6C561484AED5C02') podcast_id proba 47 b4c3c3ebdd76e284f7d9fa358ac82030 0.999225 31 c9add5e9e81a4b3ca963adab5b87083f 0.999216 30 a37fb116709bfdb2dd58ea4f784cb815 0.999042 42 a3a535f66c7e8004e7dc54c2b2829a9e 0.999038 43 b70d658c901897359bb848cf876cbcbc 0.998779 ... Eliminar el grafo pr.delete_all() Eliminar rating Eliminar rating entre usuario 6C561484AED5C02 y podcast a3a535f66c7e8004e7dc54c2b2829a9e pr.delete_rtg(user_id='6C561484AED5C02', podcast_id='a3a535f66c7e8004e7dc54c2b2829a9e') Crear rating Crear rating de 5 entre usuario 6C561484AED5C02 y podcast a3a535f66c7e8004e7dc54c2b2829a9e pr.create_rtg(user_id='6C561484AED5C02', podcast_id='a3a535f66c7e8004e7dc54c2b2829a9e', rating=5) Crear usuario Crear usuario de id A1A1A1A1A1A1A1 pr.create_user(user_id='A1A1A1A1A1A1A1') Crear podcast Crear podcast de id a1a1a1a1a1a1a1a1a1a1a1 pr.create_podcast(podcast_id='a1a1a1a1a1a1a1a1a1a1a1') Crear categoria Crear categoria de nombre cat e id 99 pr.create_category(category='cat', category_id=99) Crear relaci\u00f3n IsA Crear relaci\u00f3n podcast de id a1a1a1a1a1a1a1a1a1a1a1 IsA categoria de nombre cat pr.create_IsA(podcast_id='a1a1a1a1a1a1a1a1a1a1a1', category='cat') Cerrar driver pr.close()","title":"Home"},{"location":"#podcastrecommendation","text":"","title":"PodcastRecommendation"},{"location":"#014","text":"Podcast Recommendation Algorithm","title":"0.1.4"},{"location":"#instalar","text":"python3 -m pip install podcast-recommendation pip install podcast-recommendation pip install podcast-recommendation==0.1.4","title":"Instalar"},{"location":"#uso","text":"","title":"Uso"},{"location":"#import","text":"from podcast_recommendation.algorithm import PodcastRecommendation","title":"Import"},{"location":"#crear-objeto","text":"Para utilizarlo debe tener una DataBase abierta en Neo4j con el plugin de Data Science pr = PodcastRecommendation('bolt://localhost:7687', ('neo4j', 'password'), verbose=True) Reading x_train Reading y_train Training model Training complete","title":"Crear objeto"},{"location":"#generar-grafo","text":"pr.build_graph(verbose=True) Reading categories Reading ratings Creating categories, categories and IsA Creating users, categories and ratings Build complete Se genera un grafo como el siguiente:","title":"Generar grafo"},{"location":"#generar-recomendaciones","text":"Para recomendar podcast al usuario 6C561484AED5C02 pr.recommend(user_id='6C561484AED5C02') podcast_id proba 47 b4c3c3ebdd76e284f7d9fa358ac82030 0.999225 31 c9add5e9e81a4b3ca963adab5b87083f 0.999216 30 a37fb116709bfdb2dd58ea4f784cb815 0.999042 42 a3a535f66c7e8004e7dc54c2b2829a9e 0.999038 43 b70d658c901897359bb848cf876cbcbc 0.998779 ...","title":"Generar recomendaciones"},{"location":"#eliminar-el-grafo","text":"pr.delete_all()","title":"Eliminar el grafo"},{"location":"#eliminar-rating","text":"Eliminar rating entre usuario 6C561484AED5C02 y podcast a3a535f66c7e8004e7dc54c2b2829a9e pr.delete_rtg(user_id='6C561484AED5C02', podcast_id='a3a535f66c7e8004e7dc54c2b2829a9e')","title":"Eliminar rating"},{"location":"#crear-rating","text":"Crear rating de 5 entre usuario 6C561484AED5C02 y podcast a3a535f66c7e8004e7dc54c2b2829a9e pr.create_rtg(user_id='6C561484AED5C02', podcast_id='a3a535f66c7e8004e7dc54c2b2829a9e', rating=5)","title":"Crear rating"},{"location":"#crear-usuario","text":"Crear usuario de id A1A1A1A1A1A1A1 pr.create_user(user_id='A1A1A1A1A1A1A1')","title":"Crear usuario"},{"location":"#crear-podcast","text":"Crear podcast de id a1a1a1a1a1a1a1a1a1a1a1 pr.create_podcast(podcast_id='a1a1a1a1a1a1a1a1a1a1a1')","title":"Crear podcast"},{"location":"#crear-categoria","text":"Crear categoria de nombre cat e id 99 pr.create_category(category='cat', category_id=99)","title":"Crear categoria"},{"location":"#crear-relacion-isa","text":"Crear relaci\u00f3n podcast de id a1a1a1a1a1a1a1a1a1a1a1 IsA categoria de nombre cat pr.create_IsA(podcast_id='a1a1a1a1a1a1a1a1a1a1a1', category='cat')","title":"Crear relaci\u00f3n IsA"},{"location":"#cerrar-driver","text":"pr.close()","title":"Cerrar driver"},{"location":"algorithm-reference/","text":"Algorithm module PodcastRecommendation __init__ ( self , uri , auth , x_path = None , y_path = None , verbose = False ) special Creates object. Reads files to train Logistic Regression model. Parameters: uri ( str ) \u2013 neo4j uri auth ( str ) \u2013 neo4j (user, psw) x_path ( str ) \u2013 path to x_train. Defaults to X_PATH. y_path ( str ) \u2013 path to y_train. Defaults to Y_PATH. verbose ( bool ) \u2013 verbose. Defaults to False. adamic_adar ( self , user_id , podcast_id ) Generates data from Adamic Adar metric Parameters: user_id ( str ) \u2013 user id podcast_id ( str ) \u2013 podcast id Returns: list \u2013 adamic adar build_cat ( self , row ) Builds relations in categories_sample dataset Parameters: row ( pd.Series ) \u2013 dataframe row build_graph ( self , cat_path = None , rtg_path = None , delete_all = True , verbose = False ) Builds graph in neo4j Parameters: cat_path ( str ) \u2013 path to categories_sample. Defaults to CAT_PATH. rtg_path ( str ) \u2013 path to ratings_sample. Defaults to RTG_PATH. delete_all ( bool ) \u2013 if to delete graph before writting. Defaults to True. verbose ( bool ) \u2013 verbose. Defaults to False. build_rtg ( self , row ) Builds relations in ratings_sample dataset Parameters: row ( pd.Series ) \u2013 dataframe row close ( self ) Closes driver. create_IsA ( self , podcast_id , category ) Creates an IsA relationship Parameters: podcast_id ( str ) \u2013 podcast id category ( str ) \u2013 category name create_category ( self , category , category_id ) Creates category Parameters: category ( str ) \u2013 category name category_id ( int ) \u2013 category id create_podcast ( self , podcast_id ) Creates a podcast Parameters: podcast_id ( str ) \u2013 podcast id create_rtg ( self , user_id , podcast_id , rating ) Create rating relationship Parameters: user_id ( str ) \u2013 user id podcast_id ( str ) \u2013 podcast id rating ( int ) \u2013 rating create_user ( self , user_id ) Creates user Parameters: user_id ( str ) \u2013 user id delete_all ( self ) Deletes all elements in the graph delete_rtg ( self , user_id , podcast_id ) Deletes rating relationship Parameters: user_id ( str ) \u2013 user id podcast_id ( str ) \u2013 podcast id gen_data ( self , df ) Generates data for podcast recommendation Parameters: df ( pd.DataFrame ) \u2013 podcasts Returns: pd.DataFrame \u2013 dataframe with attributes gen_data_row ( self , row ) Helper for gen_data Parameters: row ( pd.Series ) \u2013 row of data Returns: list \u2013 list of attributes get_cat_based ( self , user_id , podcast_id ) Generates data from paths (user)->(podcast)->(category)<-(podcast) Parameters: user_id ( str ) \u2013 user id podcast_id ( str ) \u2013 podcast id Returns: list \u2013 sum of ratings and count of paths get_user_based ( self , user_id , podcast_id ) Generates data from paths (user)->(podcast)<-(user)->(podcast) Parameters: user_id ( str ) \u2013 user id podcast_id ( str ) \u2013 podcast id Returns: list \u2013 sum of ratings and count of paths recommend ( self , user_id ) Generates podcast recommendation for user Parameters: user_id ( str ) \u2013 user id Returns: pd.DataFrame \u2013 podcasts and probabilities","title":"Algorithm"},{"location":"algorithm-reference/#algorithm-module","text":"","title":"Algorithm module"},{"location":"algorithm-reference/#src.podcast_recommendation.algorithm.PodcastRecommendation","text":"","title":"PodcastRecommendation"},{"location":"algorithm-reference/#src.podcast_recommendation.algorithm.PodcastRecommendation.__init__","text":"Creates object. Reads files to train Logistic Regression model. Parameters: uri ( str ) \u2013 neo4j uri auth ( str ) \u2013 neo4j (user, psw) x_path ( str ) \u2013 path to x_train. Defaults to X_PATH. y_path ( str ) \u2013 path to y_train. Defaults to Y_PATH. verbose ( bool ) \u2013 verbose. Defaults to False.","title":"__init__()"},{"location":"algorithm-reference/#src.podcast_recommendation.algorithm.PodcastRecommendation.adamic_adar","text":"Generates data from Adamic Adar metric Parameters: user_id ( str ) \u2013 user id podcast_id ( str ) \u2013 podcast id Returns: list \u2013 adamic adar","title":"adamic_adar()"},{"location":"algorithm-reference/#src.podcast_recommendation.algorithm.PodcastRecommendation.build_cat","text":"Builds relations in categories_sample dataset Parameters: row ( pd.Series ) \u2013 dataframe row","title":"build_cat()"},{"location":"algorithm-reference/#src.podcast_recommendation.algorithm.PodcastRecommendation.build_graph","text":"Builds graph in neo4j Parameters: cat_path ( str ) \u2013 path to categories_sample. Defaults to CAT_PATH. rtg_path ( str ) \u2013 path to ratings_sample. Defaults to RTG_PATH. delete_all ( bool ) \u2013 if to delete graph before writting. Defaults to True. verbose ( bool ) \u2013 verbose. Defaults to False.","title":"build_graph()"},{"location":"algorithm-reference/#src.podcast_recommendation.algorithm.PodcastRecommendation.build_rtg","text":"Builds relations in ratings_sample dataset Parameters: row ( pd.Series ) \u2013 dataframe row","title":"build_rtg()"},{"location":"algorithm-reference/#src.podcast_recommendation.algorithm.PodcastRecommendation.close","text":"Closes driver.","title":"close()"},{"location":"algorithm-reference/#src.podcast_recommendation.algorithm.PodcastRecommendation.create_IsA","text":"Creates an IsA relationship Parameters: podcast_id ( str ) \u2013 podcast id category ( str ) \u2013 category name","title":"create_IsA()"},{"location":"algorithm-reference/#src.podcast_recommendation.algorithm.PodcastRecommendation.create_category","text":"Creates category Parameters: category ( str ) \u2013 category name category_id ( int ) \u2013 category id","title":"create_category()"},{"location":"algorithm-reference/#src.podcast_recommendation.algorithm.PodcastRecommendation.create_podcast","text":"Creates a podcast Parameters: podcast_id ( str ) \u2013 podcast id","title":"create_podcast()"},{"location":"algorithm-reference/#src.podcast_recommendation.algorithm.PodcastRecommendation.create_rtg","text":"Create rating relationship Parameters: user_id ( str ) \u2013 user id podcast_id ( str ) \u2013 podcast id rating ( int ) \u2013 rating","title":"create_rtg()"},{"location":"algorithm-reference/#src.podcast_recommendation.algorithm.PodcastRecommendation.create_user","text":"Creates user Parameters: user_id ( str ) \u2013 user id","title":"create_user()"},{"location":"algorithm-reference/#src.podcast_recommendation.algorithm.PodcastRecommendation.delete_all","text":"Deletes all elements in the graph","title":"delete_all()"},{"location":"algorithm-reference/#src.podcast_recommendation.algorithm.PodcastRecommendation.delete_rtg","text":"Deletes rating relationship Parameters: user_id ( str ) \u2013 user id podcast_id ( str ) \u2013 podcast id","title":"delete_rtg()"},{"location":"algorithm-reference/#src.podcast_recommendation.algorithm.PodcastRecommendation.gen_data","text":"Generates data for podcast recommendation Parameters: df ( pd.DataFrame ) \u2013 podcasts Returns: pd.DataFrame \u2013 dataframe with attributes","title":"gen_data()"},{"location":"algorithm-reference/#src.podcast_recommendation.algorithm.PodcastRecommendation.gen_data_row","text":"Helper for gen_data Parameters: row ( pd.Series ) \u2013 row of data Returns: list \u2013 list of attributes","title":"gen_data_row()"},{"location":"algorithm-reference/#src.podcast_recommendation.algorithm.PodcastRecommendation.get_cat_based","text":"Generates data from paths (user)->(podcast)->(category)<-(podcast) Parameters: user_id ( str ) \u2013 user id podcast_id ( str ) \u2013 podcast id Returns: list \u2013 sum of ratings and count of paths","title":"get_cat_based()"},{"location":"algorithm-reference/#src.podcast_recommendation.algorithm.PodcastRecommendation.get_user_based","text":"Generates data from paths (user)->(podcast)<-(user)->(podcast) Parameters: user_id ( str ) \u2013 user id podcast_id ( str ) \u2013 podcast id Returns: list \u2013 sum of ratings and count of paths","title":"get_user_based()"},{"location":"algorithm-reference/#src.podcast_recommendation.algorithm.PodcastRecommendation.recommend","text":"Generates podcast recommendation for user Parameters: user_id ( str ) \u2013 user id Returns: pd.DataFrame \u2013 podcasts and probabilities","title":"recommend()"}]}